(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{eODa:function(e,n,t){"use strict";t.r(n),t.d(n,"_frontmatter",(function(){return c})),t.d(n,"default",(function(){return b}));var a=t("Fcif"),r=t("+I+c"),s=(t("mXGw"),t("/FXl")),o=t("TjRS"),c=(t("aD51"),{});void 0!==c&&c&&c===Object(c)&&Object.isExtensible(c)&&!c.hasOwnProperty("__filemeta")&&Object.defineProperty(c,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"src/dashboard.mdx"}});var i={_frontmatter:c},p=o.a;function b(e){var n=e.components,t=Object(r.a)(e,["components"]);return Object(s.b)(p,Object(a.a)({},i,t,{components:n,mdxType:"MDXLayout"}),Object(s.b)("p",null,"The ReactJS web dashboard uses ",Object(s.b)("a",{href:"/api",parentName:"p"},"API services")," to display the test results and currently running tests. You can browse test details and failure messages."),Object(s.b)("p",null,"When a ",Object(s.b)("a",{href:"/director/storage",parentName:"p"},"Storage driver")," is configured, you can also see screenshots and video recordings (if enabled)."),Object(s.b)("h2",{id:"configuration"},"Configuration"),Object(s.b)("p",null,"Set the environment variable ",Object(s.b)("inlineCode",{parentName:"p"},"GRAPHQL_SCHEMA_URL")," with the URL of ",Object(s.b)("a",{href:"/api",parentName:"p"},"API service"),".\nGraphQL client will use it to pull schema definitions and issue queries."),Object(s.b)("pre",null,Object(s.b)("code",{className:"language-sh",parentName:"pre"},"GRAPHQL_SCHEMA_URL='https://sorry-cypress-demo-api.herokuapp.com'\n")),Object(s.b)("p",null,"You can explore an example dashboard at ",Object(s.b)("a",{href:"https://sorry-cypress-demo.herokuapp.com/",parentName:"p"},"https://sorry-cypress-demo.herokuapp.com/"),"."),Object(s.b)("h2",{id:"running-the-service"},"Running the service"),Object(s.b)("pre",null,Object(s.b)("code",{className:"language-sh",parentName:"pre"},"$ cd packages/dashboard\n\n$ npm install\n$ npm run build\n...\n$ npm run start\n\n$ node ./server\nListening on 8080...\n")))}void 0!==b&&b&&b===Object(b)&&Object.isExtensible(b)&&!b.hasOwnProperty("__filemeta")&&Object.defineProperty(b,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"src/dashboard.mdx"}}),b.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-dashboard-mdx-f98e8d6e40d82cfb2a0c.js.map